{"ast":null,"code":"// import {useNavigate, useParams} from \"react-router-dom\";\n// import {useEffect, useState} from \"react\";\n// import {useDispatch, useSelector} from \"react-redux\";\n// import {detailsProduct, updateProduct} from \"../action/productActions\";\n// import LoadingBox from \"../share/LoadingBox\";\n// import MessageBox from \"../share/MessageBox\";\n// import {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\n// import axios from \"axios\";\n//\n// export default function ProductEditScreen(){\n//     const navigate = useNavigate()\n//     const params = useParams();\n//     const { id: productId } = params;\n//\n//     const [name, setName] = useState('');\n//     const [price, setPrice] = useState('');\n//     const [image, setImage] = useState('');\n//     const [category, setCategory] = useState('');\n//     const [counterInStock, setCountInStock] = useState('');\n//     const [brand, setBrand] = useState('');\n//     const [description, setDescription] = useState('');\n//\n//     const productDetails = useSelector((state) => state.productDetails)\n//     const {loading, error, product} = productDetails\n//     const productUpdate = useSelector((state) => state.productUpdate);\n//     const {\n//         loading: loadingUpdate,\n//         error: errorUpdate,\n//         success: successUpdate,\n//     } = productUpdate;\n//     const dispatch = useDispatch()\n//     useEffect(() => {\n//         if (successUpdate) {\n//             navigate('/productlist');\n//         }\n//         if (!product || product._id !== productId || successUpdate) {\n//             dispatch({ type: PRODUCT_UPDATE_RESET });\n//             dispatch(detailsProduct(productId));\n//         } else {\n//             setName(product.name);\n//             setPrice(product.price);\n//             setImage(product.image);\n//             setCategory(product.category);\n//             setCountInStock(product.countInStock);\n//             setBrand(product.brand);\n//             setDescription(product.description);\n//         }\n//     }, [product, dispatch, productId, successUpdate, navigate]);\n//     const submitHandler = (e) => {\n//         e.preventDefault();\n//         // TODO: dispatch update product\n//         dispatch(\n//             updateProduct({\n//                 _id: productId,\n//                 name,\n//                 price,\n//                 image,\n//                 category,\n//                 brand,\n//                 counterInStock,\n//                 description,\n//             })\n//         );\n//     };\n//     const userSignin = useSelector((state) => state.userSignin);\n//     const { userinfo } = userSignin;\n//     const [loadingUpload, setLoadingUpload] = useState(false);\n//     const [errorUpload, setErrorUpload] = useState('');\n//\n//     const uploadFileHandler = async (e) => {\n//         const file = e.target.files[0];\n//         const bodyFormData = new FormData();\n//         bodyFormData.append('image', file);\n//         setLoadingUpload(true);\n//         try {\n//             const { data } = await axios.post('/api/uploads', bodyFormData, {\n//                 headers: {\n//                     'Content-Type': 'multipart/form-data',\n//                     Authorization: `${userinfo.token}`,\n//                 },\n//             });\n//             setImage(data);\n//             setLoadingUpload(false);\n//         } catch (error) {\n//             setErrorUpload(error.message);\n//             setLoadingUpload(false);\n//         }\n//     };\n//     return(\n//         <div>\n//             <form className=\"form\" onSubmit={submitHandler}>\n//                 <div>\n//                     <h1>Edit Product {productId}</h1>\n//                 </div>\n//                 {loadingUpdate && <LoadingBox></LoadingBox>}\n//                 {errorUpdate && <MessageBox variant=\"danger\"> {errorUpdate}</MessageBox>}\n//                 {successUpdate && <MessageBox variant=\"success\"> Updated Successfully{successUpdate}</MessageBox>}\n//                 {loading ? (\n//                     <LoadingBox></LoadingBox>\n//                 ) : error ? (\n//                     <MessageBox variant=\"danger\">{error}</MessageBox>\n//                 ) : (\n//                     <>\n//                         <div>\n//                             <label htmlFor=\"name\">Name</label>\n//                             <input\n//                                 id=\"name\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter name\"\n//                                 value={name}\n//                                 onChange={(e) => setName(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"price\">Price</label>\n//                             <input\n//                                 id=\"price\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter price\"\n//                                 value={price}\n//                                 onChange={(e) => setPrice(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"image\">Image</label>\n//                             <input\n//                                 id=\"image\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter image\"\n//                                 value={image}\n//                                 onChange={(e) => setImage(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"image\"> Image</label>\n//                             <input\n//                                 type=\"file\"\n//                                 id=\"imageFile\"\n//                                 label=\"Choose Image\"\n//                                 onChange={uploadFileHandler}\n//                             />\n//                             {loadingUpload && <LoadingBox></LoadingBox>}\n//                             {errorUpload && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"category\">Category</label>\n//                             <input\n//                                 id=\"category\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter category\"\n//                                 value={category}\n//                                 onChange={(e) => setCategory(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"brand\">Brand</label>\n//                             <input\n//                                 id=\"brand\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter brand\"\n//                                 value={brand}\n//                                 onChange={(e) => setBrand(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"countInStock\">Count In Stock</label>\n//                             <input\n//                                 id=\"countInStock\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter countInStock\"\n//                                 value={counterInStock}\n//                                 onChange={(e) => setCountInStock(e.target.value)}\n//                             ></input>\n//                         </div>\n//                         <div>\n//                             <label htmlFor=\"description\">Description</label>\n//                             <textarea\n//                                 id=\"description\"\n//                                 rows=\"3\"\n//                                 type=\"text\"\n//                                 placeholder=\"Enter description\"\n//                                 value={description}\n//                                 onChange={(e) => setDescription(e.target.value)}\n//                             ></textarea>\n//                         </div>\n//                         <div>\n//                             <label></label>\n//                             <button className=\"primary\" type=\"submit\">\n//                                 Update\n//                             </button>\n//                         </div>\n//                     </>\n//                 )}\n//             </form>\n//         </div>\n//     )\n// }","map":{"version":3,"names":[],"sources":["C:/Users/Administrator/OneDrive/Desktop/Folder/MayaCons/amazona/frontend/src/screens/ProductEditScreen.js"],"sourcesContent":["// import {useNavigate, useParams} from \"react-router-dom\";\r\n// import {useEffect, useState} from \"react\";\r\n// import {useDispatch, useSelector} from \"react-redux\";\r\n// import {detailsProduct, updateProduct} from \"../action/productActions\";\r\n// import LoadingBox from \"../share/LoadingBox\";\r\n// import MessageBox from \"../share/MessageBox\";\r\n// import {PRODUCT_UPDATE_RESET} from \"../constants/productConstants\";\r\n// import axios from \"axios\";\r\n//\r\n// export default function ProductEditScreen(){\r\n//     const navigate = useNavigate()\r\n//     const params = useParams();\r\n//     const { id: productId } = params;\r\n//\r\n//     const [name, setName] = useState('');\r\n//     const [price, setPrice] = useState('');\r\n//     const [image, setImage] = useState('');\r\n//     const [category, setCategory] = useState('');\r\n//     const [counterInStock, setCountInStock] = useState('');\r\n//     const [brand, setBrand] = useState('');\r\n//     const [description, setDescription] = useState('');\r\n//\r\n//     const productDetails = useSelector((state) => state.productDetails)\r\n//     const {loading, error, product} = productDetails\r\n//     const productUpdate = useSelector((state) => state.productUpdate);\r\n//     const {\r\n//         loading: loadingUpdate,\r\n//         error: errorUpdate,\r\n//         success: successUpdate,\r\n//     } = productUpdate;\r\n//     const dispatch = useDispatch()\r\n//     useEffect(() => {\r\n//         if (successUpdate) {\r\n//             navigate('/productlist');\r\n//         }\r\n//         if (!product || product._id !== productId || successUpdate) {\r\n//             dispatch({ type: PRODUCT_UPDATE_RESET });\r\n//             dispatch(detailsProduct(productId));\r\n//         } else {\r\n//             setName(product.name);\r\n//             setPrice(product.price);\r\n//             setImage(product.image);\r\n//             setCategory(product.category);\r\n//             setCountInStock(product.countInStock);\r\n//             setBrand(product.brand);\r\n//             setDescription(product.description);\r\n//         }\r\n//     }, [product, dispatch, productId, successUpdate, navigate]);\r\n//     const submitHandler = (e) => {\r\n//         e.preventDefault();\r\n//         // TODO: dispatch update product\r\n//         dispatch(\r\n//             updateProduct({\r\n//                 _id: productId,\r\n//                 name,\r\n//                 price,\r\n//                 image,\r\n//                 category,\r\n//                 brand,\r\n//                 counterInStock,\r\n//                 description,\r\n//             })\r\n//         );\r\n//     };\r\n//     const userSignin = useSelector((state) => state.userSignin);\r\n//     const { userinfo } = userSignin;\r\n//     const [loadingUpload, setLoadingUpload] = useState(false);\r\n//     const [errorUpload, setErrorUpload] = useState('');\r\n//\r\n//     const uploadFileHandler = async (e) => {\r\n//         const file = e.target.files[0];\r\n//         const bodyFormData = new FormData();\r\n//         bodyFormData.append('image', file);\r\n//         setLoadingUpload(true);\r\n//         try {\r\n//             const { data } = await axios.post('/api/uploads', bodyFormData, {\r\n//                 headers: {\r\n//                     'Content-Type': 'multipart/form-data',\r\n//                     Authorization: `${userinfo.token}`,\r\n//                 },\r\n//             });\r\n//             setImage(data);\r\n//             setLoadingUpload(false);\r\n//         } catch (error) {\r\n//             setErrorUpload(error.message);\r\n//             setLoadingUpload(false);\r\n//         }\r\n//     };\r\n//     return(\r\n//         <div>\r\n//             <form className=\"form\" onSubmit={submitHandler}>\r\n//                 <div>\r\n//                     <h1>Edit Product {productId}</h1>\r\n//                 </div>\r\n//                 {loadingUpdate && <LoadingBox></LoadingBox>}\r\n//                 {errorUpdate && <MessageBox variant=\"danger\"> {errorUpdate}</MessageBox>}\r\n//                 {successUpdate && <MessageBox variant=\"success\"> Updated Successfully{successUpdate}</MessageBox>}\r\n//                 {loading ? (\r\n//                     <LoadingBox></LoadingBox>\r\n//                 ) : error ? (\r\n//                     <MessageBox variant=\"danger\">{error}</MessageBox>\r\n//                 ) : (\r\n//                     <>\r\n//                         <div>\r\n//                             <label htmlFor=\"name\">Name</label>\r\n//                             <input\r\n//                                 id=\"name\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter name\"\r\n//                                 value={name}\r\n//                                 onChange={(e) => setName(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"price\">Price</label>\r\n//                             <input\r\n//                                 id=\"price\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter price\"\r\n//                                 value={price}\r\n//                                 onChange={(e) => setPrice(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"image\">Image</label>\r\n//                             <input\r\n//                                 id=\"image\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter image\"\r\n//                                 value={image}\r\n//                                 onChange={(e) => setImage(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"image\"> Image</label>\r\n//                             <input\r\n//                                 type=\"file\"\r\n//                                 id=\"imageFile\"\r\n//                                 label=\"Choose Image\"\r\n//                                 onChange={uploadFileHandler}\r\n//                             />\r\n//                             {loadingUpload && <LoadingBox></LoadingBox>}\r\n//                             {errorUpload && <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>}\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"category\">Category</label>\r\n//                             <input\r\n//                                 id=\"category\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter category\"\r\n//                                 value={category}\r\n//                                 onChange={(e) => setCategory(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"brand\">Brand</label>\r\n//                             <input\r\n//                                 id=\"brand\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter brand\"\r\n//                                 value={brand}\r\n//                                 onChange={(e) => setBrand(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"countInStock\">Count In Stock</label>\r\n//                             <input\r\n//                                 id=\"countInStock\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter countInStock\"\r\n//                                 value={counterInStock}\r\n//                                 onChange={(e) => setCountInStock(e.target.value)}\r\n//                             ></input>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label htmlFor=\"description\">Description</label>\r\n//                             <textarea\r\n//                                 id=\"description\"\r\n//                                 rows=\"3\"\r\n//                                 type=\"text\"\r\n//                                 placeholder=\"Enter description\"\r\n//                                 value={description}\r\n//                                 onChange={(e) => setDescription(e.target.value)}\r\n//                             ></textarea>\r\n//                         </div>\r\n//                         <div>\r\n//                             <label></label>\r\n//                             <button className=\"primary\" type=\"submit\">\r\n//                                 Update\r\n//                             </button>\r\n//                         </div>\r\n//                     </>\r\n//                 )}\r\n//             </form>\r\n//         </div>\r\n//     )\r\n// }"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}